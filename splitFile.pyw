#!/usr/bin/env python3'''Da inserire opzione di mantenere le intestazioni!'''from tkinter import filedialogfrom tkinter import *import osimport mathsource=''destinationDir=''def openFile():    global source    source=filedialog.askopenfilename(filetypes=[('Text files','.txt'),('Comma separated files','.csv')],title="Open the file to split")    sourceLabel.pack_forget()    if source:        sourceLabel['text']=source        sourceLabel.pack()def chooseDir():    global destinationDir    destinationDir=filedialog.askdirectory()    destLabel.pack_forget()    if destLabel:        destLabel['text']=destinationDir        destLabel.pack()    def validateNumber(e):    if not e:        return True    try:        return int(e)>-1    except:        return Falsedef doSplit():    global source    global destinationDir        Message.pack_forget() #reset message        if not e1.get() or not int(e1.get())>0:        Message['text'] = '# of rows per file.'        Message.pack()        return False    if not source:         Message['text'] = 'Source not defined.'        Message.pack()        return False    if not destinationDir:        Message['text'] = 'Destination folder not defined.'        Message.pack()        return False        orig = open(source,"r")    lines = orig.readlines()    perfile = int(e1.get())    tot = math.ceil(len(lines)/perfile)    out_ext = os.path.splitext(orig.name)[1]    if not out_ext:        out_text = '.txt'        for i in range(0,tot):        out = open(destinationDir+'/'+os.path.basename(orig.name)+'_splitted_'+str(i+1)+out_ext,'w') #.splitext gets the filename extension [1]        for j in range(i*perfile,((i+1)*perfile)):            try:                if lines[j]:                    if j == (i+1)*perfile-1:                        lines[j]=lines[j][:-1] #remove last newline character in lines[j]                                            out.write(lines[j]);            except:                break    Message['text'] = 'Done.'    Message['fg'] = '#00FF00'    Message.pack()mainWindow = Tk()mainWindow.title('File splitter')mainWindow.resizable(0,0)#top framef0 = Frame(mainWindow)f0.pack(side=TOP,pady=5,padx=5,fill=X,expand=1)Label(f0,text="Split by ").grid(row=0,column=0)e1 = Entry(f0,validate='key')e1.insert(0,500)vcmd = e1.register(validateNumber)e1['validatecommand']=(vcmd,'%P')e1.grid(row=0,column=1)Label(f0,text=" rows per file").grid(row=0,column=2)#middle framef1 = Frame(mainWindow)f1.pack(side=TOP,pady=5,padx=5)btn_open = Button(f1,text="Open file to split...")btn_open['command'] = lambda: openFile()btn_open.pack(padx=5,pady=5,fill=X,expand=1)sourceLabel = Label(f1)#middle frame 2f2 = Frame(mainWindow)f2.pack(pady=5,padx=5)btn_choosedir = Button(f2,text="Select destination folder...")btn_choosedir['command'] = lambda: chooseDir()btn_choosedir.pack(padx=5, pady=5,fill=X,expand=1)destLabel = Label(f2)#bottom frame (buttons)f3 = Frame(mainWindow)f3.pack(pady=5,padx=5,fill=X,expand=1)btn_ok = Button(f3,text="Go")btn_ok['command'] = lambda: doSplit()btn_ok.pack(side=LEFT,anchor=S,padx=5,pady=5,fill=X,expand=1)btn_quit = Button(f3,text="Exit")btn_quit["command"] = mainWindow.quitbtn_quit.pack(side=RIGHT,anchor=S,padx=5,pady=5,fill=X,expand=1)#bottom framef4 = Frame(mainWindow)f4.pack(side=BOTTOM,pady=0,padx=0,fill=X,expand=1)Message = Label(f4,fg='#FF0000')Message.pack(side=BOTTOM,pady=5,padx=5,fill=X,expand=1)Message.pack_forget()Label(f4,text="GPLv3 - Pasquale Lafiosca",fg='#111111',bg='#AAAAAA',font=('',8),bd=0).pack(side=BOTTOM,fill=X,expand=1)#richiamo la finestra principalemainWindow.mainloop()